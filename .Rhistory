View(obs.list)
time.seg<- 1:nrow(obs.list$`1`)
tbsp.clust<- cbind(tbsp.clust,time.seg) %>% data.frame()
View(tbsp.clust)
View(tbsp.clust)
dat.list$`1`<- left_join(dat.list$`1`, tbsp.clust, by="time.seg")
View(dat.list)
View(dat.list[["1"]])
colnames(obs.list$`1`)
colnames(obs.list$`1`)[-1
]
## Plot heatmap of clusters
colnames(obs.list$`1`)[-1]=1:ncol(obs.list$`1`[-1])
ncol(obs.list$`1`[-1])
ncol(obs.list$`1`[,-1])
## Plot heatmap of clusters
colnames(obs.list$`1`)[-1]=1:ncol(obs.list$`1`[,-1])
colnames(obs.list$`1`)[-1]
obs.list$`1` %>% data.frame() %>% gather(key, value)
## Plot heatmap of clusters
colnames(obs.list$`1`)[-1]=1:ncol(obs.list$`1`[,-1])
View(obs.list)
obs.list$`1`
obs.list$`1`[,-1] %>% data.frame() %>% gather(key, value)
# obs1.breakpts<- data.frame(breaks=obs1.breakpts)
nobs=nrow(obs.list$`1`)
nloc=ncol(obs.list$`1`[,-1])
obs1.long<- obs.list$`1`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
View(obs1.long)
## Plot heatmap of clusters
colnames(obs.list$`1`)[-1]=1:ncol(obs.list$`1`[,-1]) %>% as.character()
obs.list$`1`[,-1]
obs1.long<- obs.list$`1`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
View(obs1.long)
View(obs1.long)
obs1.long$key<- as.factor(obs1.long$key)
levels(obs1.long$key)<- 1:nloc
obs1.long$key<- as.numeric(obs1.long$key)
View(tbsp.clust)
tbsp.clust[,1]<- tbsp.clust[,1] %>% as.numeric()
tbsp.clust[,2]<- tbsp.clust[,2] %>% as.numeric()
rect.lims<- rle(tbsp.clust$tbsp.clust)
rect.lims$lengths<- cumsum(rect.lims$lengths)+0.5
rect.lims$lengths<- c(0.5, rect.lims$lengths)
rect.lims.new<- matrix(0, length(rect.lims$values), 3)
for (i  in 2:length(rect.lims$lengths)) {
rect.lims.new[i-1,]<- c(rect.lims$lengths[i-1], rect.lims$lengths[i], rect.lims$values[i-1])
}
colnames(rect.lims.new)<- c("xmin","xmax","tbsp.clust")
rect.lims.new<- data.frame(rect.lims.new)
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(breaks = 1:6, expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = 6.5,
ymax = 6.75, fill = tbsp.clust), color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Spatial Cluster") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)")
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = 6.5,
ymax = 6.75, fill = tbsp.clust), color = NA, size = 1.5)
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = 19.5,
ymax = 19.75, fill = tbsp.clust), color = NA, size = 1.5)
max(obs1.long$key)
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(key) + 0.5,
ymax = max(key) + 0.75, fill = tbsp.clust), color = NA,
size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Spatial Cluster") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs1.long$key) + 0.5,
ymax = max(osb1.long$key) + 0.75, fill = tbsp.clust),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Spatial Cluster") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs1.long$key) + 0.5,
ymax = max(obs1.long$key) + 0.75, fill = tbsp.clust),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Spatial Cluster") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
dat1.res<- gibbs.clust.space(dat = obs.list$`1`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 6)
#progress bar
pb <- progress_bar$new(
format = " iteration (:current/:total) [:bar] :percent [Elapsed: :elapsed, Remaining: :eta]",
total = ngibbs, clear = FALSE, width= 100)
dat1.res<- gibbs.clust.space(dat = obs.list$`1`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 6)
plot(dat1.res$loglikel,type='l')
plot(dat1.res$phi[ngibbs,],type='h')
which(dat1.res$loglikel==max(dat1.res$loglikel))
MAP1<- which(dat1.res$loglikel==max(dat1.res$loglikel))  # iteration 620 of MAP
# MAP1<- dat1.res$loglikel %>% order(decreasing = T) %>% subset(. > 500) %>% first() #iteration 541
tbsp.clust<- dat1.res$z[MAP1,]
table(tbsp.clust)  # 19 clusters, but there are 19 ACs
time.seg<- 1:nrow(obs.list$`1`)
tbsp.clust<- cbind(tbsp.clust,time.seg) %>% data.frame()
dat.list$`1`<- left_join(dat.list$`1`, tbsp.clust, by="time.seg")
colnames(obs.list$`1`)[-1]=1:ncol(obs.list$`1`[,-1]) %>% as.character()
# obs1.breakpts<- data.frame(breaks=obs1.breakpts)
nobs=nrow(obs.list$`1`)
nloc=ncol(obs.list$`1`[,-1])
obs1.long<- obs.list$`1`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs1.long$key<- as.factor(obs1.long$key)
levels(obs1.long$key)<- 1:nloc
obs1.long$key<- as.numeric(obs1.long$key)
tbsp.clust[,1]<- tbsp.clust[,1] %>% as.numeric()
tbsp.clust[,2]<- tbsp.clust[,2] %>% as.numeric()
rect.lims<- rle(tbsp.clust$tbsp.clust)
rect.lims$lengths<- cumsum(rect.lims$lengths)+0.5
rect.lims$lengths<- c(0.5, rect.lims$lengths)
rect.lims.new<- matrix(0, length(rect.lims$values), 3)
for (i  in 2:length(rect.lims$lengths)) {
rect.lims.new[i-1,]<- c(rect.lims$lengths[i-1], rect.lims$lengths[i], rect.lims$values[i-1])
}
colnames(rect.lims.new)<- c("xmin","xmax","tbsp.clust")
rect.lims.new<- data.frame(rect.lims.new)
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs1.long$key) + 0.5,
ymax = max(obs1.long$key) + 0.75, fill = tbsp.clust),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Spatial Cluster") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
View(obs1.long)
max(obs1.long$value)
View(obs1.long)
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs1.long$key) + 0.5,
ymax = max(obs1.long$key) + 0.75, fill = tbsp.clust),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Activity Center") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
dat12.res<- gibbs.clust.space(dat = obs.list$`12`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 6)
#progress bar
pb <- progress_bar$new(
format = " iteration (:current/:total) [:bar] :percent [Elapsed: :elapsed, Remaining: :eta]",
total = ngibbs, clear = FALSE, width= 100)
dat12.res<- gibbs.clust.space(dat = obs.list$`12`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 6)
plot(dat12.res$loglikel,type='l')
plot(dat12.res$phi[ngibbs,],type='h')
plot(dat12.res$z[ngibbs,],type='h')
which(dat12.res$loglikel==max(dat12.res$loglikel))
MAP1<- which(dat12.res$loglikel==max(dat12.res$loglikel))  # iteration 966 of MAP
rm(tbsp.clust)
# MAP1<- dat1.res$loglikel %>% order(decreasing = T) %>% subset(. > 500) %>% first() #iteration 541
tbsp.clust1<- dat1.res$z[MAP1,]
table(tbsp.clust1)  # 6 clusters
tbsp.clust1<- cbind(tbsp.clust1,time.seg) %>% data.frame()
dat.list$`1`<- left_join(dat.list$`1`, tbsp.clust1, by="time.seg")
View(tbsp.clust1)
colnames(obs.list$`1`)[-1]=1:ncol(obs.list$`1`[,-1]) %>% as.character()
nobs=nrow(obs.list$`1`)
nloc=ncol(obs.list$`1`[,-1])
obs1.long<- obs.list$`1`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs1.long$key<- as.factor(obs1.long$key)
levels(obs1.long$key)<- 1:nloc
obs1.long$key<- as.numeric(obs1.long$key)
tbsp.clust1[,1]<- tbsp.clust1[,1] %>% as.numeric()
tbsp.clust1[,2]<- tbsp.clust1[,2] %>% as.numeric()
rect.lims<- rle(tbsp.clust1$tbsp.clust1)
rect.lims$lengths<- cumsum(rect.lims$lengths)+0.5
rect.lims$lengths<- c(0.5, rect.lims$lengths)
rect.lims.new<- matrix(0, length(rect.lims$values), 3)
for (i  in 2:length(rect.lims$lengths)) {
rect.lims.new[i-1,]<- c(rect.lims$lengths[i-1], rect.lims$lengths[i], rect.lims$values[i-1])
}
colnames(rect.lims.new)<- c("xmin","xmax","tbsp.clust1")
rect.lims.new<- data.frame(rect.lims.new)
#plot
ggplot() +
geom_tile(data=obs1.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs1.long$key) + 0.5,
ymax = max(obs1.long$key) + 0.75, fill = tbsp.clust1),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Activity Center") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
MAP12<- which(dat12.res$loglikel==max(dat12.res$loglikel))  # iteration 966 of MAP
# MAP12<- dat1.res$loglikel %>% order(decreasing = T) %>% subset(. > 500) %>% first() #iteration 541
tbsp.clust12<- dat12.res$z[MAP1,]
table(tbsp.clust12)  # 6 clusters
time.seg<- 1:nrow(obs.list$`12`)
tbsp.clust12<- cbind(tbsp.clust12,time.seg) %>% data.frame()
dat.list$`12`<- left_join(dat.list$`12`, tbsp.clust12, by="time.seg")
#format data
colnames(obs.list$`12`)[-1]=1:ncol(obs.list$`12`[,-1]) %>% as.character()
nobs=nrow(obs.list$`12`)
nloc=ncol(obs.list$`12`[,-1])
obs12.long<- obs.list$`12`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs12.long$key<- as.factor(obs12.long$key)
levels(obs12.long$key)<- 1:nloc
obs12.long$key<- as.numeric(obs12.long$key)
tbsp.clust12[,1]<- tbsp.clust12[,1] %>% as.numeric()
tbsp.clust12[,2]<- tbsp.clust12[,2] %>% as.numeric()
#generate boxes denoting clusters
rect.lims<- rle(tbsp.clust12$tbsp.clust12)
rect.lims$lengths<- cumsum(rect.lims$lengths)+0.5
rect.lims$lengths<- c(0.5, rect.lims$lengths)
rect.lims.new<- matrix(0, length(rect.lims$values), 3)
for (i  in 2:length(rect.lims$lengths)) {
rect.lims.new[i-1,]<- c(rect.lims$lengths[i-1], rect.lims$lengths[i], rect.lims$values[i-1])
}
colnames(rect.lims.new)<- c("xmin","xmax","tbsp.clust12")
rect.lims.new<- data.frame(rect.lims.new)
#plot
ggplot() +
geom_tile(data=obs12.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs12.long$key) + 0.5,
ymax = max(obs12.long$key) + 0.75, fill = tbsp.clust12),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Activity Center") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
#progress bar
pb <- progress_bar$new(
format = " iteration (:current/:total) [:bar] :percent [Elapsed: :elapsed, Remaining: :eta]",
total = ngibbs, clear = FALSE, width= 100)
dat19.res<- gibbs.clust.space(dat = obs.list$`19`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 6)
plot(dat19.res$loglikel,type='l')
plot(dat19.res$phi[ngibbs,],type='h')
plot(dat19.res$z[ngibbs,],type='h')
MAP19<- which(dat19.res$loglikel==max(dat19.res$loglikel))  # iteration 966 of MAP
# MAP19<- dat1.res$loglikel %>% order(decreasing = T) %>% subset(. > 500) %>% first()
tbsp.clust19<- dat19.res$z[MAP1,]
table(tbsp.clust19)  # 6 clusters
time.seg<- 1:nrow(obs.list$`19`)
tbsp.clust19<- cbind(tbsp.clust19,time.seg) %>% data.frame()
dat.list$`19`<- left_join(dat.list$`19`, tbsp.clust19, by="time.seg")
#format data
colnames(obs.list$`19`)[-1]=1:ncol(obs.list$`19`[,-1]) %>% as.character()
nobs=nrow(obs.list$`19`)
nloc=ncol(obs.list$`19`[,-1])
obs19.long<- obs.list$`19`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs19.long$key<- as.factor(obs19.long$key)
levels(obs19.long$key)<- 1:nloc
obs19.long$key<- as.numeric(obs19.long$key)
tbsp.clust19[,1]<- tbsp.clust19[,1] %>% as.numeric()
tbsp.clust19[,2]<- tbsp.clust19[,2] %>% as.numeric()
#generate boxes denoting clusters
rect.lims<- rle(tbsp.clust19$tbsp.clust19)
rect.lims$lengths<- cumsum(rect.lims$lengths)+0.5
rect.lims$lengths<- c(0.5, rect.lims$lengths)
rect.lims.new<- matrix(0, length(rect.lims$values), 3)
for (i  in 2:length(rect.lims$lengths)) {
rect.lims.new[i-1,]<- c(rect.lims$lengths[i-1], rect.lims$lengths[i], rect.lims$values[i-1])
}
colnames(rect.lims.new)<- c("xmin","xmax","tbsp.clust19")
rect.lims.new<- data.frame(rect.lims.new)
#plot
ggplot() +
geom_tile(data=obs19.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs19.long$key) + 0.5,
ymax = max(obs19.long$key) + 0.75, fill = tbsp.clust19),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Activity Center") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
#progress bar
pb <- progress_bar$new(
format = " iteration (:current/:total) [:bar] :percent [Elapsed: :elapsed, Remaining: :eta]",
total = ngibbs, clear = FALSE, width= 100)
dat27.res<- gibbs.clust.space(dat = obs.list$`27`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 6)
plot(dat27.res$loglikel,type='l')
#progress bar
pb <- progress_bar$new(
format = " iteration (:current/:total) [:bar] :percent [Elapsed: :elapsed, Remaining: :eta]",
total = ngibbs, clear = FALSE, width= 100)
dat27.res<- gibbs.clust.space(dat = obs.list$`27`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 8)
plot(dat27.res$loglikel,type='l')
plot(dat27.res$phi[ngibbs,],type='h')
plot(dat27.res$z[ngibbs,],type='h')
#progress bar
pb <- progress_bar$new(
format = " iteration (:current/:total) [:bar] :percent [Elapsed: :elapsed, Remaining: :eta]",
total = ngibbs, clear = FALSE, width= 100)
dat27.res<- gibbs.clust.space(dat = obs.list$`27`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 4)
plot(dat27.res$loglikel,type='l')
plot(dat27.res$phi[ngibbs,],type='h')
plot(dat27.res$z[ngibbs,],type='h')
MAP27<- which(dat27.res$loglikel==max(dat27.res$loglikel))  # iteration 966 of MAP
# MAP27<- dat1.res$loglikel %>% order(decreasing = T) %>% subset(. > 500) %>% first() #iteration 541
tbsp.clust27<- dat27.res$z[MAP1,]
table(tbsp.clust27)  # 6 clusters
time.seg<- 1:nrow(obs.list$`27`)
tbsp.clust27<- cbind(tbsp.clust27,time.seg) %>% data.frame()
dat.list$`27`<- left_join(dat.list$`27`, tbsp.clust27, by="time.seg")
#format data
colnames(obs.list$`27`)[-1]=1:ncol(obs.list$`27`[,-1]) %>% as.character()
nobs=nrow(obs.list$`27`)
nloc=ncol(obs.list$`27`[,-1])
obs27.long<- obs.list$`27`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs27.long$key<- as.factor(obs27.long$key)
levels(obs27.long$key)<- 1:nloc
obs27.long$key<- as.numeric(obs27.long$key)
tbsp.clust27[,1]<- tbsp.clust27[,1] %>% as.numeric()
tbsp.clust27[,2]<- tbsp.clust27[,2] %>% as.numeric()
#generate boxes denoting clusters
rect.lims<- rle(tbsp.clust27$tbsp.clust27)
rect.lims$lengths<- cumsum(rect.lims$lengths)+0.5
rect.lims$lengths<- c(0.5, rect.lims$lengths)
rect.lims.new<- matrix(0, length(rect.lims$values), 3)
for (i  in 2:length(rect.lims$lengths)) {
rect.lims.new[i-1,]<- c(rect.lims$lengths[i-1], rect.lims$lengths[i], rect.lims$values[i-1])
}
colnames(rect.lims.new)<- c("xmin","xmax","tbsp.clust27")
rect.lims.new<- data.frame(rect.lims.new)
#plot
ggplot() +
geom_tile(data=obs27.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs27.long$key) + 0.5,
ymax = max(obs27.long$key) + 0.75, fill = tbsp.clust27),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Activity Center") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
#progress bar
pb <- progress_bar$new(
format = " iteration (:current/:total) [:bar] :percent [Elapsed: :elapsed, Remaining: :eta]",
total = ngibbs, clear = FALSE, width= 100)
dat27.res<- gibbs.clust.space(dat = obs.list$`27`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 6)
plot(dat27.res$loglikel,type='l')
plot(dat27.res$phi[ngibbs,],type='h')
plot(dat27.res$z[ngibbs,],type='h')
MAP27<- which(dat27.res$loglikel==max(dat27.res$loglikel))  # iteration 966 of MAP
tbsp.clust27<- dat27.res$z[MAP1,]
table(tbsp.clust27)  # 6 clusters
time.seg<- 1:nrow(obs.list$`27`)
tbsp.clust27<- cbind(tbsp.clust27,time.seg) %>% data.frame()
dat.list$`27`<- left_join(dat.list$`27`, tbsp.clust27, by="time.seg")
## Plot heatmap of clusters
#format data
colnames(obs.list$`27`)[-1]=1:ncol(obs.list$`27`[,-1]) %>% as.character()
nobs=nrow(obs.list$`27`)
nloc=ncol(obs.list$`27`[,-1])
obs27.long<- obs.list$`27`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs27.long$key<- as.factor(obs27.long$key)
levels(obs27.long$key)<- 1:nloc
obs27.long$key<- as.numeric(obs27.long$key)
tbsp.clust27[,1]<- tbsp.clust27[,1] %>% as.numeric()
tbsp.clust27[,2]<- tbsp.clust27[,2] %>% as.numeric()
#generate boxes denoting clusters
rect.lims<- rle(tbsp.clust27$tbsp.clust27)
rect.lims$lengths<- cumsum(rect.lims$lengths)+0.5
rect.lims$lengths<- c(0.5, rect.lims$lengths)
rect.lims.new<- matrix(0, length(rect.lims$values), 3)
for (i  in 2:length(rect.lims$lengths)) {
rect.lims.new[i-1,]<- c(rect.lims$lengths[i-1], rect.lims$lengths[i], rect.lims$values[i-1])
}
colnames(rect.lims.new)<- c("xmin","xmax","tbsp.clust27")
rect.lims.new<- data.frame(rect.lims.new)
#plot
ggplot() +
geom_tile(data=obs27.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs27.long$key) + 0.5,
ymax = max(obs27.long$key) + 0.75, fill = tbsp.clust27),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Activity Center") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
#progress bar
pb <- progress_bar$new(
format = " iteration (:current/:total) [:bar] :percent [Elapsed: :elapsed, Remaining: :eta]",
total = ngibbs, clear = FALSE, width= 100)
dat27.res<- gibbs.clust.space(dat = obs.list$`27`[,-1], ngibbs = ngibbs, nburn = nburn,
nclustmax = 3)
plot(dat27.res$loglikel,type='l')
plot(dat27.res$phi[ngibbs,],type='h')
plot(dat27.res$z[ngibbs,],type='h')
MAP27<- which(dat27.res$loglikel==max(dat27.res$loglikel))  # iteration 966 of MAP
# MAP27<- which(dat27.res$loglikel==max(dat27.res$loglikel))  # iteration 966 of MAP
MAP27<- dat1.res$loglikel %>% order(decreasing = T) %>% subset(. > 500) %>% first() #iteration 541
tbsp.clust27<- dat27.res$z[MAP1,]
table(tbsp.clust27)  # 6 clusters
time.seg<- 1:nrow(obs.list$`27`)
tbsp.clust27<- cbind(tbsp.clust27,time.seg) %>% data.frame()
dat.list$`27`<- left_join(dat.list$`27`, tbsp.clust27, by="time.seg")
## Plot heatmap of clusters
#format data
colnames(obs.list$`27`)[-1]=1:ncol(obs.list$`27`[,-1]) %>% as.character()
nobs=nrow(obs.list$`27`)
nloc=ncol(obs.list$`27`[,-1])
obs27.long<- obs.list$`27`[,-1] %>% data.frame() %>% gather(key, value) %>% mutate(time=rep(1:nobs, times=nloc))
obs27.long$key<- as.factor(obs27.long$key)
levels(obs27.long$key)<- 1:nloc
obs27.long$key<- as.numeric(obs27.long$key)
tbsp.clust27[,1]<- tbsp.clust27[,1] %>% as.numeric()
tbsp.clust27[,2]<- tbsp.clust27[,2] %>% as.numeric()
#generate boxes denoting clusters
rect.lims<- rle(tbsp.clust27$tbsp.clust27)
rect.lims$lengths<- cumsum(rect.lims$lengths)+0.5
rect.lims$lengths<- c(0.5, rect.lims$lengths)
rect.lims.new<- matrix(0, length(rect.lims$values), 3)
for (i  in 2:length(rect.lims$lengths)) {
rect.lims.new[i-1,]<- c(rect.lims$lengths[i-1], rect.lims$lengths[i], rect.lims$values[i-1])
}
colnames(rect.lims.new)<- c("xmin","xmax","tbsp.clust27")
rect.lims.new<- data.frame(rect.lims.new)
#plot
ggplot() +
geom_tile(data=obs27.long, aes(x=time, y=key, fill=log10(value+1))) +
scale_fill_viridis_c("log10(N+1)") +
scale_y_continuous(expand = c(0,0)) +
scale_x_continuous(expand = c(0,0)) +
new_scale_fill() +
geom_vline(data = rect.lims.new, aes(xintercept = xmin), color = "white", size = 0.35) +
geom_rect(data=rect.lims.new, aes(xmin = xmin, xmax = xmax, ymin = max(obs27.long$key) + 0.5,
ymax = max(obs27.long$key) + 0.75, fill = tbsp.clust27),
color = NA, size = 1.5) +
scale_fill_gradientn("Time Cluster", colours = ocean.amp(6)) +
labs(x = "Time Segment", y = "Activity Center") +
theme_bw() +
theme(axis.title = element_text(size = 18), axis.text = element_text(size = 16))
